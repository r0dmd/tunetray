package com.r0dmd.tunetray.model;

import java.util.HashSet;
import java.util.Set;

import com.fasterxml.jackson.annotation.JsonIgnore;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.ManyToMany;

// Marks this class as a JPA entity, so Spring Data JPA knows to map it to a database table.
@Entity
public class Track {

  // Marks id as the primary key.
  @Id
  // Tells JPA the id will be auto-generated by the database auto-increment).
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  private Long id;

  // Fields title, artist, and album are simple string columns mapped
  // automatically.
  private String title;
  private String artist;
  private String album;

  @ManyToMany(mappedBy = "tracks")
  @JsonIgnore  // Prevents infinite recursion when serializing to JSON
  private Set<Playlist> playlists = new HashSet<>();

  // No-args constructor required by JPA
  public Track() {

  }

  // All-args constructor (optional, for easier object creation)
  public Track(String title, String artist, String album) {
    this.title = title;
    this.artist = artist;
    this.album = album;
  }

  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public String getArtist() {
    return artist;
  }

  public void setArtist(String artist) {
    this.artist = artist;
  }

  public String getAlbum() {
    return album;
  }

  public void setAlbum(String album) {
    this.album = album;
  }

  public Set<Playlist> getPlaylists() {
    return playlists;
  }

  public void setPlaylists(Set<Playlist> playlists) {
    this.playlists = playlists;
  }

}
